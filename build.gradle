plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.be'
version = '0.0.1-SNAPSHOT'

def querydslVersion = "5.0.0"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 크롤링
	implementation 'org.jsoup:jsoup:1.17.2'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

	// Swagger(OpenAPI 3.0)1
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	//google smtp
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//동적 email html생성을 위한 타임리프
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// 스프링시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// oauth
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//feign client
	implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
	implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [generated]
}

// queryDSL
clean {
	delete file('src/main/generated')
}

tasks.named('test') {
	useJUnitPlatform()
}

// 메인 서버 JAR 생성
// ./gradlew buildMainJar
tasks.register('buildMainJar', Jar) {
	archiveBaseName.set('main-server')
	manifest {
		attributes 'Main-Class': 'com.be.bus.mainserver.MainServerApplication'
	}
	from sourceSets.main.output
	dependsOn configurations.runtimeClasspath
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// 배치 서버 JAR 생성
// ./gradlew buildBatchJar
tasks.register('buildBatchJar', Jar) {
	archiveBaseName.set('batch-server')
	manifest {
		attributes 'Main-Class': 'com.be.bus.batchserver.BatchServerApplication'
	}
	from sourceSets.main.output
	dependsOn configurations.runtimeClasspath
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
springBoot { // 동천이오니까임시
	mainClass = 'com.be.bus.batchserver.BatchServerApplication'
}
